// generated by diplomat-tool

part of 'lib.g.dart';

final class OptionString implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _ffi;

  // These are "used" in the sense that they keep dependencies alive
  // ignore: unused_field
  final core.List<Object> _selfEdge;

  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  OptionString._fromFfi(this._ffi, this._selfEdge) {
    if (_selfEdge.isEmpty) {
      _finalizer.attach(this, _ffi.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_OptionString_destroy));

  static OptionString? new_(String diplomatStr) {
    final temp = ffi2.Arena();
    final diplomatStrView = diplomatStr.utf8View;
    final result = _OptionString_new(diplomatStrView.allocIn(temp), diplomatStrView.length);
    temp.releaseAll();
    return result.address == 0 ? null : OptionString._fromFfi(result, []);
  }

  String? write() {
    final writeable = _Writeable();
    final result = _OptionString_write(_ffi, writeable._ffi);
    if (!result.isOk) {
      return null;
    }
    return writeable.finalize();
  }

  String? borrow() {
    // This lifetime edge depends on lifetimes: 'a
    core.List<Object> aEdges = [this];
    final result = _OptionString_borrow(_ffi);
    if (!result.isOk) {
      return null;
    }
    return result.union.ok._toDart(aEdges);
  }
}

@meta.ResourceIdentifier('OptionString_destroy')
@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'OptionString_destroy')
// ignore: non_constant_identifier_names
external void _OptionString_destroy(ffi.Pointer<ffi.Void> self);

@meta.ResourceIdentifier('OptionString_new')
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Uint8>, ffi.Size)>(isLeaf: true, symbol: 'OptionString_new')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _OptionString_new(ffi.Pointer<ffi.Uint8> diplomatStrData, int diplomatStrLength);

@meta.ResourceIdentifier('OptionString_write')
@ffi.Native<_ResultVoidVoid Function(ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'OptionString_write')
// ignore: non_constant_identifier_names
external _ResultVoidVoid _OptionString_write(ffi.Pointer<ffi.Opaque> self, ffi.Pointer<ffi.Opaque> writeable);

@meta.ResourceIdentifier('OptionString_borrow')
@ffi.Native<_ResultUint8Void Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'OptionString_borrow')
// ignore: non_constant_identifier_names
external _ResultUint8Void _OptionString_borrow(ffi.Pointer<ffi.Opaque> self);
